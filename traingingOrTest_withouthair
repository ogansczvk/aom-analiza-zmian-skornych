import os
import shutil
import pandas as pd
import random

random.seed(42)
df = pd.read_csv("data/HAM10000_metadata.csv")
mel_dir = "output"
mel_files = [os.path.join(mel_dir, f) for f in os.listdir(mel_dir)]

#dataframy
mel_df = pd.DataFrame({"path": mel_files, "label": 1})
nonmel_df_meta = df[df['dx'] != 'mel']

data_dir1 = r'C:\Users\oliwi\OneDrive\Pulpit\Studia\semestr 6\Analiza Obrazów Medycznych\projekt\data\HAM10000_images_part_1'
data_dir2 = r'C:\Users\oliwi\OneDrive\Pulpit\Studia\semestr 6\Analiza Obrazów Medycznych\projekt\data\HAM10000_images_part_2'


def get_full_path(row):
    fname = row['image_id'] + '.jpg'
    p1 = os.path.join(data_dir1, fname)
    p2 = os.path.join(data_dir2, fname)
    if os.path.exists(p1):
        return p1
    elif os.path.exists(p2):
        return p2
    else:
        return None

nonmel_df_meta = nonmel_df_meta.copy()
nonmel_df_meta.loc[:, 'path'] = nonmel_df_meta.apply(get_full_path, axis=1)
nonmel_df_meta = nonmel_df_meta.dropna(subset=['path'])

nonmel_df = nonmel_df_meta[['path']].copy()
nonmel_df['label'] = 0

# Zbalansuj liczebność 
nonmel_df = nonmel_df.sample(n=len(mel_df), random_state=42)

#Połącz i pomieszaj
binary_df = pd.concat([mel_df, nonmel_df]).sample(frac=1, random_state=42).reset_index(drop=True)

# Podział na 80% trening / 20% test
split_idx = int(0.8 * len(binary_df))
train_df = binary_df[:split_idx]
test_df = binary_df[split_idx:]

def save_images_to_folder(df, target_root):
    for idx, row in df.iterrows():
        label = 'melanoma' if row['label'] == 1 else 'not_melanoma'
        src = row['path']
        
        dst_dir = os.path.join(target_root, label)
        if not os.path.exists(dst_dir):
            os.makedirs(dst_dir)
        
        dst = os.path.join(dst_dir, os.path.basename(src))
        shutil.copy(src, dst)


save_images_to_folder(train_df, 'train_wh')
save_images_to_folder(test_df, 'test_wh')

print(f"Train size: {len(train_df)}")
print(f"Test size: {len(test_df)}")
